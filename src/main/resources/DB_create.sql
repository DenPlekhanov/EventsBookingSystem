DROP TABLE IF EXISTS Event_Staff CASCADE;
DROP TABLE IF EXISTS Event CASCADE;
DROP TABLE IF EXISTS timeslot CASCADE;
-- DROP TABLE IF EXISTS time_slot CASCADE;
DROP TABLE IF EXISTS Staff CASCADE;
DROP TABLE IF EXISTS Place CASCADE;
DROP TABLE IF EXISTS Reservation CASCADE;
DROP TABLE IF EXISTS Reservation_Participant CASCADE;
DROP TABLE IF EXISTS Participant CASCADE;
DROP TABLE IF EXISTS t_role CASCADE;
DROP TABLE IF EXISTS t_user CASCADE;
DROP TABLE IF EXISTS t_user_roles CASCADE;


CREATE TABLE Event (
    id bigint NOT NULL,
    event_name VARCHAR(255) NOT NULL,
    event_description VARCHAR(255) NOT NULL,
    event_capacity integer NOT NULL,
    CONSTRAINT "Event_pk" PRIMARY KEY ("id")
) WITH (OIDS=FALSE);

CREATE TABLE TimeSlot (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
--     id bigserial NOT NULL,
    event_id bigint,
    start_date TIMESTAMP NOT NULL,
    finish_date TIMESTAMP NOT NULL,
    place_id bigint NOT NULL,
    CONSTRAINT "TimeSlot_pk" PRIMARY KEY ("id")
) WITH (OIDS=FALSE);

CREATE TABLE Event_Staff (
    event_id bigint NOT NULL,
    staff_id bigint NOT NULL
) WITH (OIDS=FALSE);

CREATE TABLE Staff (
    id bigint NOT NULL UNIQUE,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    phone VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    CONSTRAINT "Staff_pk" PRIMARY KEY ("id")
) WITH (OIDS=FALSE);

CREATE TABLE Place (
    id bigint NOT NULL,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL,
    type_of_events VARCHAR(255) NOT NULL,
    default_event_capacity integer NOT NULL,
    CONSTRAINT "Place_pk" PRIMARY KEY ("id")
) WITH (OIDS=FALSE);

CREATE TABLE Reservation (
    id bigint NOT NULL,
    event_id bigint NOT NULL,
    date_of_reservation DATE NOT NULL,
    amount_of_people integer NOT NULL,
    CONSTRAINT "Reservation_pk" PRIMARY KEY ("id")
) WITH (OIDS=FALSE);

CREATE TABLE Reservation_Participant (
    reservation_id bigint NOT NULL,
    participant_id bigint NOT NULL
) WITH (OIDS=FALSE);

CREATE TABLE Participant (
    id bigint UNIQUE,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    phone VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    CONSTRAINT "Participant_pk" PRIMARY KEY ("id")
) WITH (OIDS=FALSE);

-- CREATE TABLE t_role (
--     id   bigint UNIQUE,
--     name VARCHAR(255) NOT NULL,
--     CONSTRAINT "t_role_pkey" PRIMARY KEY ("id")
-- ) WITH (OIDS=FALSE);
--
-- CREATE TABLE t_user (
--     id   bigint UNIQUE,
--     password VARCHAR(255) NOT NULL,
--     username VARCHAR(255) NOT NULL,
--     CONSTRAINT "t_user_pkey" PRIMARY KEY ("id")
-- ) WITH (OIDS=FALSE);
--
-- CREATE TABLE t_user_roles (
--     user_id bigint NOT NULL,
--     roles_id bigint NOT NULL
-- ) WITH (OIDS=FALSE);

-- CREATE TABLE t_role (
--     id bigint UNIQUE,
--     name VARCHAR(255) NOT NULL,
--     @ManyToMany(mappedBy = "roles")
--     private Set<User> users;
-- )

ALTER TABLE TimeSlot ADD CONSTRAINT "TimeSlot_fk0" FOREIGN KEY ("event_id") REFERENCES Event("id");
ALTER TABLE TimeSlot ADD CONSTRAINT "TimeSlot_fk1" FOREIGN KEY ("place_id") REFERENCES Place("id");
ALTER TABLE Event_Staff ADD CONSTRAINT "Event_Staff_fk0" FOREIGN KEY ("event_id") REFERENCES Event("id");
ALTER TABLE Event_Staff ADD CONSTRAINT "Event_Staff_fk1" FOREIGN KEY ("staff_id") REFERENCES Staff("id");
ALTER TABLE Reservation ADD CONSTRAINT "Reservation_fk0" FOREIGN KEY ("event_id") REFERENCES Event("id");
ALTER TABLE Reservation_Participant ADD CONSTRAINT "Reservation_Participant_fk0" FOREIGN KEY ("reservation_id") REFERENCES Reservation("id");
ALTER TABLE Reservation_Participant ADD CONSTRAINT "Reservation_Participant_fk1" FOREIGN KEY ("participant_id") REFERENCES Participant("id");
-- ALTER TABLE t_user_roles ADD CONSTRAINT "user_roles_fk0" FOREIGN KEY ("user_id") REFERENCES t_user("id");
-- ALTER TABLE t_user_roles ADD CONSTRAINT "user_roles_fk1" FOREIGN KEY ("roles_id") REFERENCES t_role("id");